name: tests

on:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

jobs:

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Set Up Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install flake8
      - name: Check
        run: python -m flake8

  test:
    name: Test
    needs: flake8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9', '3.10', 'pypy3']
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Set Up Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements.txt pytest-coverage codecov
      - name: Run Tests
        run: python -m pytest --cov=whooshes --cov-report=xml
      - name: Upload Coverage
        run: python -m codecov --token=${{ secrets.CODECOV_TOKEN }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Change Log
        id: change_log
        run: >-
          echo "::set-output name=text::$(
          git --no-pager log --pretty=format:'- %s (%h)'
          `git describe --abbrev=0 --tags HEAD^1`..HEAD
          )"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Change Log:
            ${{ steps.change_log.outputs.text }}
          draft: true  # Give me a moment to edit in the description
          prerelease: false

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: Deploy Release to PyPI
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Set Up Python
      uses: actions/setup-python@v2.3.1
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -U setuptools wheel
    - name: Build
      run: python setup.py sdist bdist_wheel
    - name: Publish
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
